#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
# caso queira fazer ajustes em dos parametros, temos a funcao par()
?par
setwd("C:/Users/Julia/Desktop/CienciaDeDados/1.Big-Data-Analytics-com-R-e-Microsoft-Azure-Machine-Learning/4.Linguagem-R-Graficos")
getwd()
library(ggplot2)
View(tips)
data(tips, package = 'reshape2')
qplot(total_bill, tip, data = tips, geom = 'point', xlab = 'Valor da Conta', ylab = 'Vaor da Gorgeta') # 'total_bill - valor da conta | 'tip' - valor da gorgeta
camada1 <- geom_point(
mapping = aes(x = total_bill, y = tip, color = smoker), # color diz se quem deu gorgeta era fumante ou nao
data = tips,
size = 3
)
ggplot() + camada1
# Camada 1
camada1_df <- geom_point(
mapping = aes(x = df_valor_casas$Preco, y = df_valor_casas$N.de.Quartos, color = df_valor_casas$Bairro),
data = df_valor_casas,
size = 3
)
df_valor_casas <- data.frame(Preco = c(572, 780, 859, 950),
`N de Quartos` = c('2', '3', '4', '5'),
Bairro = c('Classe Alta', 'Classe Media', 'Classe Alta', 'Classe Alta'),
row.names = c('Casa 1', 'Casa 2', 'Casa 3', 'Casa 4'))
qplot(df_valor_casas$Preco, df_valor_casas$N.de.Quartos, data = df_valor_casas,
geom = 'point', xlab = 'Preco', ylab = 'N de quartos')
camada1 <- geom_point(
mapping = aes(x = total_bill, y = tip, color = smoker), # color diz se quem deu gorgeta era fumante ou nao
data = tips,
size = 3
)
ggplot() + camada1
camada1_df <- geom_point(
mapping = aes(x = df_valor_casas$Preco, y = df_valor_casas$N.de.Quartos, color = df_valor_casas$Bairro),
data = df_valor_casas,
size = 3
)
ggplot() + camada1_df
camada1_df <- geom_point(
mapping = aes(x = df_valor_casas$Preco, y = df_valor_casas$N.de.Quartos, color = df_valor_casas$Bairro),
data = df_valor_casas,
size = 3
)
ggplot(xlab = 'bla') + camada1_df
# Construindo um modelo de regressao
modelo_base <- lm(tip ~ total_bill, data = tips)
modelo_base
View(modelo_base)
summary(modelo_base)
modelo_base <- lm(tip ~ total_bill, data = tips) # A formula tip ~ total_bill indica que queremos prever a gorjeta com base no valor total da conta. O argumento data = tips especifica que os dados a serem usados sao do dataframe tips.
modelo_fit <- data.frame(
total_bill = tips$total_bill,
predict(modelo_base, interval = "confidence")
)
summary(modelo_fit)
View(modelo_fit)
head(modelo_fit)
View(modelo_fit)
df_valor_casas <- data.frame(Preco = c(572, 780, 859, 950, 450, 680, 980),
`N de Quartos` = c('2', '3', '4', '5', '2', '3', '5'),
Bairro = c('Classe Alta', 'Classe Media', 'Classe Alta', 'Classe Alta', 'Classe Media', 'Classe Media', 'Classe Alta'),
row.names = c('Casa 1', 'Casa 2', 'Casa 3', 'Casa 4'))
# criando df com valores direto na funcao
df_valor_casas <- data.frame(Preco = c(572, 780, 859, 950, 450, 680, 980),
`N de Quartos` = c('2', '3', '4', '5', '2', '3', '5'),
Bairro = c('Classe Alta', 'Classe Media', 'Classe Alta', 'Classe Alta', 'Classe Media', 'Classe Media', 'Classe Alta'),
row.names = c('Casa 1', 'Casa 2', 'Casa 3', 'Casa 4', 'Casa 5', 'Casa 6', 'Casa 7'))
qplot(df_valor_casas$Preco, df_valor_casas$N.de.Quartos, data = df_valor_casas,
geom = 'point', xlab = 'Preco', ylab = 'N de quartos')
ggplot(data = df_valor_casas, aes(x = df_valor_casas$Preco, y = df_valor_casas$N.de.Quartos, color = df_valor_casas$Bairro)) +
geom_point(size = 3)
modelo_base2 <- lm(df_valor_casas$N.de.Quartos ~~ df_valor_casas$Preco, data = df_valor_casas)
modelo_base2 <- lm(df_valor_casas$N.de.Quartos ~ df_valor_casas$Preco, data = df_valor_casas)
summary(modelo_base2)
summary(modelo_base)
modelo_base2 <- lm(df_valor_casas$Preco ~ df_valor_casas$N.de.Quartos, data = df_valor_casas)
summary(modelo_base2)
modelo_fit2 <- data.frame(
`N de Quartos` = df_valor_casas$N.de.Quartos,
predict(modelo_base2, interval = "confidence")
)
View(modelo_fit2)
View(df_valor_casas)
ggplot() + camada1
camada2 <- geom_line(
mapping = aes(x = total_bill, y = fit), # fit vem do df modelo_fit
data = modelo_fit,
color = 'darkred'
)
ggplot() + camada1 + camada2
camada2_df <- geom_line(
mapping = aes(x = df_valor_casas$Preco, y = fit),
data = modelo_fit2,
color = 'darkred'
)
ggplot() + camada1_df + camada2_df
# Camada 1
camada1_df <- geom_point(
mapping = aes(x = df_valor_casas$Preco, y = df_valor_casas$N.de.Quartos, color = df_valor_casas$Bairro),
data = df_valor_casas,
size = 3
)
ggplot() + camada1_df
camada2_df = 1
camada2_df <- geom_line(
mapping = aes(x = df_valor_casas$Preco, y = fit),
data = modelo_fit2,
color = "darkred"
)
ggplot() + camada1_df + camada2_df
camada1_df <- geom_point(
mapping = aes(x = df_valor_casas$Preco, y = df_valor_casas$N.de.Quartos, color = df_valor_casas$Bairro),
data = df_valor_casas,
size = 3
)
ggplot() + camada1_df
ggplot() + camada1 + camada2
camada2 <- geom_line(
mapping = aes(x = total_bill, y = fit), # fit vem do df modelo_fit
data = modelo_fit,
color = 'darkred'
)
ggplot() + camada1 + camada2
View(modelo_fit)
camada1_df <- geom_point(
mapping = aes(x = df_valor_casas$Preco, y = df_valor_casas$N.de.Quartos, color = df_valor_casas$Bairro),
data = df_valor_casas,
size = 3
)
ggplot() + camada1_df
modelo_base2 <- lm(df_valor_casas$Preco ~ df_valor_casas$N.de.Quartos, data = df_valor_casas)
summary(modelo_base2)
modelo_fit2 <- data.frame(
`N de Quartos` = df_valor_casas$N.de.Quartos,
predict(modelo_base2, interval = "confidence")
)
camada2_df <- geom_line(
mapping = aes(x = df_valor_casas$Preco, y = fit),
data = modelo_fit2,
color = "darkred"
)
ggplot() + camada1_df + camada2_df
camada1_df <- geom_point(
mapping = aes(x = df_valor_casas$Preco, y = df_valor_casas$N.de.Quartos, color = df_valor_casas$Bairro),
data = df_valor_casas,
size = 3
)
ggplot() + camada1_df
camada2_df <- geom_line(
mapping = aes(x = df_valor_casas$N.de.Quartos, y = fit),
data = modelo_fit2,
color = "darkred"
)
ggplot() + camada1_df + camada2_df
camada2_df <- geom_line(
mapping = aes(x = df_valor_casas$Preco, y = fit),
data = modelo_fit2,
color = "darkred"
)
ggplot() + camada1_df + camada2_df
modelo_fit2$log_fit <- log(modelo_fit2$fit)
View(modelo_fit2)
camada2_df <- geom_line(
mapping = aes(x = df_valor_casas$Preco, y = log_fit),
data = modelo_fit2,
color = "darkred"
)
ggplot() + camada1_df + camada2_df
png('GraficoDisperComModeloDeRegressao.png', width = 1500, height = 1000, res = 100)
ggplot() + camada1 + camada2
dev.off() # fecha o dispositivo de graficos
camada3 <- geom_ribbon(
mapping = aes(x = total_bill, ymin = lwr, ymax = upr),
data = modelo_fit,
alpha = 0.3
)
ggplot() + camada1 + camada2 + camada3
camada3_df <- geom_ribbon(
mapping = aes(x = df_valor_casas$Preco, ymin = lwr, ymax = upr),
data = modelo_fit2,
alpha = 0.3
)
ggplot() + camada1_df + camada2_df + camada3_df
camada3_df <- geom_ribbon(
mapping = aes(x = df_valor_casas$Preco, ymin = log(lwr), ymax = log(upr)),
data = modelo_fit2,
alpha = 0.3
)
ggplot() + camada1_df + camada2_df + camada3_df
ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point((aes(color = sex))) +
geom_smooth(method = 'lm')
ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point((aes(color = sex))) +
geom_ribbon(method = 'lm')
ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point((aes(color = sex))) +
geom_smooth(method = 'lm')
ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point(aes(color = sex)) +
geom_smooth(method = 'lm')
ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point(aes(color = sex)) +
geom_smooth(method = 'lm')
ggplot(df_valor_casas, aes(x = df_valor_casas$Preco, y = df_valor_casas$N.de.Quartos)) +
geom_point(aes(color = df_valor_casas$Bairro))
ggplot(df_valor_casas, aes(x = df_valor_casas$Preco, y = df_valor_casas$N.de.Quartos)) +
geom_point(aes(color = df_valor_casas$Bairro)) +
geom_smooth(method = 'lm')
ggplot(df_valor_casas, aes(x = df_valor_casas$Preco, y = df_valor_casas$N.de.Quartos)) +
geom_point(aes(color = df_valor_casas$Bairro))
myplot_tips <- ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point(aes(color = sex)) +
geom_smooth(method = 'lm')
class(myplot)
class(myplot_tips)
myplot_tips
print(myplot_tips)
qplot(total_bill, tip, data = tips, geom = 'point', xlab = 'Valor da Conta', ylab = 'Vaor da Gorgeta') # 'total_bill - valor da conta | 'tip' - valor da gorgeta
# Criando os dados
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 10),
var1 = 1:100 + rnorm(100, sd = 9),
var2 = 1:100 + rnorm(100, sd = 16))
View(data)
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 5),
var1 = 1:100 + rnorm(100, sd = 9),
var2 = 1:100 + rnorm(100, sd = 16))
View(data)
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 5),
var1 = 1:50 + rnorm(100, sd = 9),
var2 = 1:50 + rnorm(100, sd = 16))
View(data)
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 10),
var1 = 1:100 + rnorm(50, sd = 9),
var2 = 1:100 + rnorm(50, sd = 16))
View(data)
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 5),
var1 = 1:100 + rnorm(100, sd = 9),
var2 = 1:100 + rnorm(100, sd = 16))
View(data)
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 10),
var1 = 1:50 + rnorm(50, sd = 9),
var2 = 1:50 + rnorm(50, sd = 16))
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 5),
var1 = 1:50 + rnorm(50, sd = 9),
var2 = 1:50 + rnorm(50, sd = 16))
View(data)
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 9),
var1 = 1:50 + rnorm(50, sd = 9),
var2 = 1:50 + rnorm(50, sd = 16))
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 4),
var1 = 1:50 + rnorm(50, sd = 9),
var2 = 1:50 + rnorm(50, sd = 16))
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 2),
var1 = 1:50 + rnorm(50, sd = 9),
var2 = 1:50 + rnorm(50, sd = 16))
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 1),
var1 = 1:50 + rnorm(50, sd = 9),
var2 = 1:50 + rnorm(50, sd = 16))
View(data)
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 5),
var1 = 1:50 + rnorm(50, sd = 9),
var2 = 1:50 + rnorm(50, sd = 16))
View(data)
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 10),
var1 = 1:100 + rnorm(100, sd = 9),
var2 = 1:100 + rnorm(100, sd = 16))
View(data)
View(data)
qplot(total_bill, tip, data = tips, geom = 'point', xlab = 'Valor da Conta', ylab = 'Vaor da Gorgeta') # 'total_bill - valor da conta | 'tip' - valor da gorgeta
ggplot() + camada1
ggplot() + camada1 + camada2
ggplot() + camada1 + camada2 + camada3
ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point(aes(color = sex)) +
geom_smooth(method = 'lm')
ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point(aes(color = sex)) +
geom_smooth(method = 'lm', color = 'darkred')
ggplot() + camada1 + camada2
ggplot(data, aes(x = var, y = var2))
ggplot(data, aes(x = var, y = var2))
ggplot(data, aes(x = var, y = var2)) +
geom_point(shape =1 )
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 10),
var1 = 1:100 + rnorm(100, sd = 9),
var2 = 1:100 + rnorm(100, sd = 16))
View(data)
ggplot(data, aes(x = var, y = var2))
ggplot(data, aes(x = data$var, y = data$var2))
data_fm <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 10),
var1 = 1:100 + rnorm(100, sd = 9),
var2 = 1:100 + rnorm(100, sd = 16))
View(data_fm)
ggplot(data, aes(x = var1, y = var2))
data <- data.frame(cond = rep(c("Obs1", "Obs2"), each = 10),
var1 = 1:100 + rnorm(100, sd = 9),
var2 = 1:100 + rnorm(100, sd = 16))
ggplot(data, aes(x = var1, y = var2))
ggplot(data, aes(x = var1, y = var2)) +
geom_point(shape =1 )
ggplot(data, aes(x = var1, y = var2)) +
geom_point(shape = 'x' )
ggplot(data, aes(x = var1, y = var2)) +
geom_point(shape = 1, size = 2 )
ggplot(data, aes(x = var1, y = var2)) +
geom_point(shape = 1, size = 3 )
ggplot(data, aes(x = var1, y = var2)) +
geom_point(shape = 1, size = 2 ) +
geom_smooth(method = lm, color = 'red', se = FALSE)
ggplot(data, aes(x = var1, y = var2)) +
geom_point(shape = 1, size = 2 ) +
geom_smooth(method = lm, color = 'red')
myplot_tips <- ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point(aes(color = sex)) +
geom_smooth(method = lm)
myplot_tips <- ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point(aes(color = sex)) +
geom_smooth(method = 'lm')
ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point(aes(color = sex)) +
geom_smooth(method = 'lm', color = 'darkred')
ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point(aes(color = sex)) +
geom_smooth(method = lm, color = 'darkred')
ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point(aes(color = sex)) +
geom_smooth(method = 'lm', color = 'darkred')
ggplot(tips, aes(x = total_bill, y = tip)) +
geom_point(aes(color = sex)) +
geom_smooth(method = lm, color = 'darkred', se = FALSE)
?lm
dados <- data.frame(grupo = c('A ', 'B ', 'C ', 'D '),
valor = c(33, 62, 56, 67),
num_obs = c(100, 500, 459, 342))
dados <- data.frame(grupo = c('A ', 'B ', 'C ', 'D '),
valor = c(33, 62, 56, 67),
num_obs = c(100, 500, 459, 342))
View(dados)
dados$right = cumsum(dados$num_obs) + 30 * c(0:(nrow(dados)-1))
dados$left = dados$right - dados&num_obs
dados$left = dados$right - dados$num_obs
View(dados)
summary(modelo_base)
ggplot(dados, aes(ymin = 0)) +
geom_rect(aes(xmin = left, xmax = right,
ymax = valor, colour = grupo, fill = grupo)) +
xlab('Numero de Observacoes') + ylab('Valor')
ggplot(dados, aes(ymin = 10)) +
geom_rect(aes(xmin = left, xmax = right,
ymax = valor, colour = grupo, fill = grupo)) +
xlab('Numero de Observacoes') + ylab('Valor')
ggplot(dados, aes(ymin = 0)) +
geom_rect(aes(xmin = left, xmax = right,
ymax = valor, colour = grupo, fill = grupo)) +
xlab('Numero de Observacoes') + ylab('Valor')
ggplot(dados, aes(ymin = 0)) +                                   # ymin
geom_rect(aes(xmin = left, xmax = right,
ymax = valor, colour = grupo, fill = grupo)) +
xlab('Numero de Observacoes') + ylab('Valor')
ggplot(dados, aes(ymin = 20)) +                                   # ymin
geom_rect(aes(xmin = left, xmax = right,
ymax = valor, colour = grupo, fill = grupo)) +
xlab('Numero de Observacoes') + ylab('Valor')
ggplot(dados, aes(ymin = 0)) +                                   # ymin
geom_rect(aes(xmin = left, xmax = right,
ymax = valor, colour = grupo, fill = grupo)) +
xlab('Numero de Observacoes') + ylab('Valor')
ggplot(dados, aes(ymin = 0)) +                                   # ymin
geom_rect(aes(xmin = left, xmax = right,
ymax = valor, ymin = 30, colour = grupo, fill = grupo)) +
xlab('Numero de Observacoes') + ylab('Valor')
ggplot(dados) +                                   # ymin
geom_rect(aes(xmin = left, xmax = right,
ymax = valor, ymin = 50, colour = grupo, fill = grupo)) +
xlab('Numero de Observacoes') + ylab('Valor')
ggplot(dados) +                                   # ymin
geom_rect(aes(xmin = left, xmax = right,
ymax = valor, ymin = 0, colour = grupo, fill = grupo)) +
xlab('Numero de Observacoes') + ylab('Valor')
ggplot(dados) +
geom_rect(aes(xmin = left, xmax = right,
ymax = valor, ymin = 0, colour = grupo, fill = grupo)) +
xlab('Numero de Observacoes') + ylab('Valor')
ggplot(dados) +
geom_rect(aes(xmin = left, xmax = right,                                 # xmin e xmax valores do label x
ymin = 0, ymax = valor, colour = grupo)) +   # ymin e ymax valors do label / color
xlab('Numero de Observacoes') + ylab('Valor')
ggplot(dados) +
geom_rect(aes(xmin = left, xmax = right,                                 # xmin e xmax valores do label x
ymin = 0, ymax = valor, fill = grupo)) +   # ymin e ymax valors do label / color
xlab('Numero de Observacoes') + ylab('Valor')
ggplot(dados) +
geom_rect(aes(xmin = left, xmax = right,                                 # xmin e xmax valores do label x
ymin = 0, ymax = valor, colour = grupo, fill = grupo)) +   # ymin e ymax valors do label / color
xlab('Numero de Observacoes') + ylab('Valor')
ggplot(dados) +
geom_rect(aes(xmin = left, xmax = right,                                 # xmin e xmax valores do label x
ymin = 0, ymax = valor, fill = grupo)) +   # ymin e ymax valors do label / color
xlab('Numero de Observacoes') + ylab('Valor')
ggplot(dados) +
geom_rect(aes(xmin = left, xmax = right,                        # usamos geom_rect para grafico de barras / xmin e xmax valores do label x
ymin = 0, ymax = valor, colour = grupo, fill = grupo)) +          # ymin e ymax valors do label / colourfill preenche as cores e cria legenda
xlab('Numero de Observacoes') + ylab('Valor')
View(mtcars)
png('GraficoBarras_ggplot.png', width = 1500, height = 1000, res = 100)
ggplot(dados) +
geom_rect(aes(xmin = left, xmax = right,                                  # usamos geom_rect para grafico de barras / xmin e xmax valores do label x
ymin = 0, ymax = valor, colour = grupo, fill = grupo)) +    # ymin e ymax valors do label / colour define a borda e fill preenche as cores e cria legenda
xlab('Numero de Observacoes') + ylab('Valor')
dev.off() # fecha o dispositivo de graficos
ggplot(data = mtcars, aes(x = disp, y = mpg))
ggplot(data = mtcars, aes(x = disp, y = mpg)) + geom_point()
df_mtcars <- mtcars
View(df_mtcars)
df_mtcars$kmpg <- df_mtcars$mpg * 1.60934
View(df_mtcars)
df_mtcars <- subset(df_mtcars, select = -kmpg)
df_mtcars <- subset(df_mtcars, select = -kmpg)
View(df_mtcars)
df_mtcars$litros_por_km <- (235.215 / mtcars$mpg) / 100
View(df_mtcars)
df_mtcars$litros_por_km <- (235.215 / mtcars$mpg)
View(df_mtcars)
source("C:/Users/Julia/Desktop/CienciaDeDados/1.Big-Data-Analytics-com-R-e-Microsoft-Azure-Machine-Learning/4.Linguagem-R-Graficos/07-Explorando-o-ggplot2.R", encoding = 'UTF-8', echo=TRUE)
df_mtcars <- mtcars
df_mtcars$litros_por_km <- (235.215 / mtcars$mpg)
View(df_mtcars)
ggplot(data = mtcars, aes(x = disp, y = mpg)) + geom_point()
ggplot(data = df_mtcars, aes(x = disp, y = litros_por_km)) + geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg)) + geom_point()               # com milhas por galao
ggplot(data = df_mtcars, aes(x = disp, y = litros_por_km)) + geom_point()  # com km por litro
View(df_mtcars)
ggplot(data = df_mtcars, aes(x = disp, y = litros_por_km)) + geom_point() +  # com km por litro
ylab = 'dips (cilindrada do motor')
df_mtcars$litros_por_km <- 100/(mtcars$mpg * 1.60934)
View(df_mtcars)
ggplot(data = mtcars, aes(x = disp, y = mpg)) + geom_point()                 # com milhas por galao
View(df_mtcars)
ggplot(data = mtcars, aes(x = dips, y = mpg, colour = as.factor(am))) +
geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg, colour = as.factor(am))) +
geom_point()
View(df_mtcars)
ggplot(data = mtcars, aes(x = disp, y = mpg, colour = as.factor(gear))) +
geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg, colour = cyl)) +
geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg, colour = am)) +
geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg, colour = as.factor(cyl))) +
geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg, colour = cyl)) +
geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg, colour = am)) +
geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg, colour = hp)) +
geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg, colour = cyl, size = wt)) +
geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg, colour = cyl, size = am)) +
geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg, colour = cyl, size = as.factor(am))) +
geom_point()
ggplot(data = mtcars, aes(x = disp, y = mpg, colour = cyl, size = wt)) +
geom_point()
ggplot(data = mtcars,
aes(x = as.factor(cyl), y = mpg)) +
geom_boxplot()
ggplot(data = mtcars,
aes(x = mpg), binwidth = 30) +
geom_histogram()
ggplot(data = mtcars,
aes(x = mpg), binwidth = 10) +
geom_histogram()
ggplot(data = mtcars,
aes(x = mpg), binwidth = 50) +
geom_histogram()
ggplot(data = mtcars,
aes(x = mpg), binwidth = 30) +
geom_histogram()
ggplot(data = mtcars,
aes(x = as.factor(cyl))) +
geom_bar()
